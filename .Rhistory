mydata[which((mydata$phase==0) & (mydata$cond!=0),]
mydata[which((mydata$phase==0) & (mydata$cond!=0)),]
mydata[(mydata$phase==0 & mydata$cond!=0),]
ggplot(mydata[(mydata$phase==0 & mydata$cond!=0),], aes(x=ambig, y=ambigChg))+
geom_point(shape=1)+    # Use hollow circles
geom_smooth(method=lm)
cor(mydata$ambig[which(mydata$phase==0)],mydata$ambigChg[which(mydata$phase==0)])
cor.test(mydata$ambig[which(mydata$phase==0)],mydata$ambigChg[which(mydata$phase==0)])
summary(lm_ambigChg<-lm(ambigChg~ambig,mydata[which(mydata$phase==0)])) #non-interacting
mydata[which(mydata$phase==0)]
mydata[which(mydata$phase==0),]
summary(lm_ambigChg<-lm(ambigChg~ambig,mydata[which(mydata$phase==0),]))
plot(mydata$ambig[which(mydata$phase==0)],mydata$ambigChg[which(mydata$phase==0)])
lm_ambigChg$residuals
plot(mydata$ambig[which(mydata$phase==0)],lm_ambigChg$residuals)
summary(lm_ambigChg<-lm(ambigChg~ambig,mydata[which(mydata$phase==0 & mydata$cond!=0),]))
cor.test(mydata$ambig[which(mydata$phase==0& mydata$cond!=0)],mydata$ambigChg[which(mydata$phase==0& mydata$cond!=0)])
summary(lm_ambigChg<-lm(ambigChg~ambig,mydata[which(mydata$phase==0 & mydata$cond!=0),]))
plot(mydata$ambig[which(mydata$phase==0& mydata$cond!=0)],lm_ambigChg$residuals)
lm_ambigChg$xlevels
lm_ambigChg$df.residual
?lm
plot(mydata$ambig[which(mydata$phase==0& mydata$cond!=0)],lm_ambigChg$fitted.values)
ggplot(mydata[(mydata$phase==0 & mydata$cond!=0),], aes(x=ambig, y=ambigChg))+
geom_point(shape=1)+    # Use hollow circles
geom_smooth(method=lm)  # Add linear regression line  (by default includes 95% confidence region)
plot(mydata$ambig[which(mydata$phase==0& mydata$cond!=0)],lm_ambigChg$residuals)
cor.test(mydata$beta[which(mydata$phase==0& mydata$cond!=0)],mydata$ambigChg[which(mydata$phase==0& mydata$cond!=0)])
cor.test(mydata$beta[which(mydata$phase==0& mydata$cond!=0)],mydata$ambig[which(mydata$phase==0& mydata$cond!=0)])
cor.test(mydata$risk[which(mydata$phase==0& mydata$cond!=0)],mydata$ambig[which(mydata$phase==0& mydata$cond!=0)])
cor.test(mydata$alpha[which(mydata$phase==0& mydata$cond!=0)],mydata$ambig[which(mydata$phase==0& mydata$cond!=0)])
mydata$beta[mydata$phase==0 & mydata$subj==2506] <-NA
mydata$beta[mydata$phase==0 & mydata$subj==2563] <-NA
cor.test(mydata$beta[which(mydata$phase==0& mydata$cond!=0)],mydata$ambigChg[which(mydata$phase==0& mydata$cond!=0)])
summary(lm_ambigChg<-lm(ambigChg~beta,mydata[which(mydata$phase==0 & mydata$cond!=0),]))
plot(mydata$beta[which(mydata$phase==0& mydata$cond!=0)],lm_ambigChg$residuals)
summary(lm_ambigChgFull <-lm(ambigChg~ambig+ep_score,mydata[which(mydata$phase==0 & mydata$cond!=0),]))
plot(mydata$ambig[which(mydata$phase==0& mydata$cond!=0)],lm_ambigChgFull$residuals)
plot(mydata$ambig[which(mydata$phase==0& mydata$cond!=0 & mydata$ep_score!=NA)],lm_ambigChgFull$residuals)
lm_ambigChgFull$residuals
library(ez)
mscore<-ezANOVA(mydata[which(mydata$phase==0),],ep_score,subj,between=cond,type=3, detailes=T)
mscore<-ezANOVA(mydata[which(mydata$phase==0),],ep_score,subj,between=cond,type=3, detailed=T)
?ezANOVA
mscore<-ezANOVA(mydata[which(mydata$phase==0$is.na(mydata$ep_score!=TRUE)),],ep_score,subj,between=cond,type=3, detailed=T)
mscore<-ezANOVA(mydata[which(mydata$phase==0&is.na(mydata$ep_score!=TRUE)),],ep_score,subj,between=cond,type=3, detailed=T)
mscore<-ezANOVA(mydata[which(mydata$phase==0 & is.na(mydata$ep_score!=TRUE)),],ep_score,subj,between=cond,type=3, detailed=T)
mydata[which(mydata$phase==0 & is.na(mydata$ep_score!=TRUE)),]
mydata[which(mydata$phase==0 & is.na(mydata$ep_score==TRUE)),]
mydata[which(mydata$phase==0 & is.na(mydata$ep_score)!=TRUE),]
mscore<-ezANOVA(mydata[which(mydata$phase==0 & is.na(mydata$ep_score)!=TRUE),],ep_score,subj,between=cond,type=3, detailed=T)
mscore
contrast(mydata$cond)
contrasts(mydata$cond)
contrasts(mydata$cond)
m3 <- lm(ambigChg~cond,mydata[which(mydata$phase==0),])
m3
summary(m3)
contrasts(mydata$cond)
m4<-lm(ep_score~cond,mydata[which(mydata$phase==0),])
summary(m4)
contrasts(mydata$cond)<-matrix(c(1,0,0,1,0,0),nrow=3,ncol=2)
contrasts(mydata$cond)
contrasts(mydata$cond)<-matrix(c(1,0,0,0,1,0),nrow=3,ncol=2)
contrasts(mydata$cond)
m4<-lm(ep_score~cond,mydata[which(mydata$phase==0),])
summary(m4)
mrisk <- ezANOVA(mydata, risk, subj,within=.(phase),between=cond, type = 3, detailed=T)
mrisk
summary(mrisk)
mrisk
mrisk <- ezANOVA(mydata, risk, subj,within=.(phase),between=cond, type = 3, detailed=T)
mrisk
mydata$riskChg<-NA
mydata$riskChg[which(mydata$phase==0)] <- mydata$risk[which(mydata$phase==1)]-
mydata$risk[which(mydata$phase==0)]
mydata$riskChg[which(mydata$phase==1)] <- mydata$risk[which(mydata$phase==1)]-
mydata$risk[which(mydata$phase==0)]
contrasts(mydata$cond)
mriskCtr <- lm(riskChg~cond,mydata[which(mydata$phase==0),])
summary(mriskCtr)
summary(lm_ambigChgFull <-lm(ambigChg~ambig+ep_score,mydata[which(mydata$phase==0 & mydata$cond!=0),]))
plot(mydata$ambig[which(mydata$phase==0& mydata$cond!=0)],lm_ambigChgFull$residuals)
summary(lm_ambigChgFull <-lm(ambigChg~beta+ep_score,mydata[which(mydata$phase==0 & mydata$cond!=0),]))
summary(lm_ambigChgFull <-lm(ambigChg~ambig+ep_score,mydata[which(mydata$phase==0 & mydata$cond!=0),]))
summary(lm_ambigChg<-lm(ambigChg~beta,mydata[which(mydata$phase==0 & mydata$cond!=0),]))
summary(lm_ambigChg<-lm(ambigChg~beta + ep_score,mydata[which(mydata$phase==0 & mydata$cond!=0),]))
plot(mydata$beta[which(mydata$phase==0& mydata$cond!=0)],lm_ambigChg$residuals)
summary(lm_riskChg<-lm(ambigChg~ambig,mydata[which(mydata$phase==0 & mydata$cond!=0),]))
summary(lm_riskChg<-lm(ambigChg~risk,mydata[which(mydata$phase==0 & mydata$cond!=0),]))
cor.test(mydata$risk[which(mydata$phase==0& mydata$cond!=0)],mydata$ambig[which(mydata$phase==0& mydata$cond!=0)])
cor.test(mydata$alpha[which(mydata$phase==0& mydata$cond!=0)],mydata$beta[which(mydata$phase==0& mydata$cond!=0)])
datafilename <- 'D:/Ruonan/Projects in the lab/Ellen Ambig Avers/Data/all subjects 12052016.csv'
mydata <- read.csv(datafilename,na.strings = "NA",header = TRUE) #save it as a data frame
mydata$ambigChg<-NA
mydata$ambigChg[which(mydata$phase==0)] <- mydata$ambig[which(mydata$phase==1)]-
mydata$ambig[which(mydata$phase==0)]
mydata$ambigChg[which(mydata$phase==1)] <- mydata$ambig[which(mydata$phase==1)]-
mydata$ambig[which(mydata$phase==0)]
mydata$riskChg<-NA
mydata$riskChg[which(mydata$phase==0)] <- mydata$risk[which(mydata$phase==1)]-
mydata$risk[which(mydata$phase==0)]
mydata$riskChg[which(mydata$phase==1)] <- mydata$risk[which(mydata$phase==1)]-
mydata$risk[which(mydata$phase==0)]
mydata$cond1[mydata$cond==0]<-1
mydata$cond1[mydata$cond==1]<-0
mydata$cond1[mydata$cond==2]<-0
mydata$cond2[mydata$cond==0]<-0
mydata$cond2[mydata$cond==1]<-0
mydata$cond2[mydata$cond==2]<-1
library(ez)
library(lsr)
library(ggplot2)
library(psych)
m3 <- lm(ambigChg~cond1+cond2,mydata[which(mydata$phase==0),])
summary(m3)
m3 <- lm(scale(ambigChg)~scale(cond1)+scale(cond2),mydata[which(mydata$phase==0),])
summary(m3)
mscoreCtr<-lm(ep_score~cond1+cond2,mydata[which(mydata$phase==0),])
summary(mscoreCtr)
describeBy(mydata$ambigChg[mydata$phase ==0], mydata$cond[mydata$phase ==0])
summary(lm_ambigChgFull <-lm(ambigChg~ambig+ep_score,mydata[which(mydata$phase==0 & mydata$cond!=0),]))
mydata$asinter= mydata$ambig*mydaata$ep_score
mydata$asinter= mydata$ambig*mydata$ep_score
summary(lm_ambigChgFull <-lm(ambigChg~ambig+ep_score asinter,mydata[which(mydata$phase==0 & mydata$cond!=0),]))
summary(lm_ambigChgFull <-lm(ambigChg~ambig+ep_score + asinter,mydata[which(mydata$phase==0 & mydata$cond!=0),]))
summary(lm_ambigChg<-lm(ambigChg~ambig,mydata[which(mydata$phase==0 & mydata$cond!=0),]))
summary(lm_ambigChg<-lm(scale(ambigChg)~scale(ambig),mydata[which(mydata$phase==0 & mydata$cond!=0),]))
describeBy(mydata$ambig, mydata$phase)
con = read.csv('D:\Ruonan\Projects in the lab\Ellen Ambig Avers\Data\feedback_All_ParCon_RiskOnly_03112019.csv', header = TRUE)
uncon = read.csv('D:\Ruonan\Projects in the lab\Ellen Ambig Avers\Data\feedback_All_Par_RiskOnly_03112019.csv', header = TRUE)
con = read.csv('D:/Ruonan/Projects in the lab/Ellen Ambig Avers/Data/feedback_All_ParCon_RiskOnly_03112019.csv', header = TRUE)
uncon = read.csv('D:/Ruonan/Projects in the lab/Ellen Ambig Avers/Data/feedback_All_Par_RiskOnly_03112019.csv', header = TRUE)
View(con)
library("ggplot2")
path = 'D:/Ruonan/Projects in the lab/VA_RA_PTB/Imaging analysis/Imaging_anallysis_082018/'
filename = list.files(path = path, pattern = '*ppi*.glm')
path = 'D:/Ruonan/Projects in the lab/VA_RA_PTB/Imaging analysis/Imaging_anallysis_082018/'
filename = list.files(path = path)
filename
filename = list.files(path = path, pattern = '*ppi*.glm')
filename
filename = list.files(path = path, pattern = *ppi*.glm)
filename = list.files(path = path, pattern = ".*ppi.*\\.glm")
filename
##### Load data ####
path = "D:/Ruonan/Projects in the lab/Ellen Ambig Avers/Data/"
nopar_file = filename("feedback_analysis_nonPar_03102019.csv", path)
nopar_file = file.create("feedback_analysis_nonPar_03102019.csv", path)
##### Load data ####
path = "D:/Ruonan/Projects in the lab/Ellen Ambig Avers/Data"
nopar_file = file.create("feedback_analysis_nonPar_03102019.csv", path)
nopar_file = file.path(path, "feedback_analysis_nonPar_03102019.csv")
nopar_file
##### Packages ####
library("ggplot2")
# risky trials only
con = read.csv('D:/Ruonan/Projects in the lab/Ellen Ambig Avers/Data/feedback_All_ParCon_RiskOnly_03112019.csv', header = TRUE)
uncon = read.csv('D:/Ruonan/Projects in the lab/Ellen Ambig Avers/Data/feedback_All_Par_RiskOnly_03112019.csv', header = TRUE)
View(con)
#####
data2plot = data.frame(con$alpha(con$is_post == 0), uncon$alpha(uncon$is_post == 0))
#####
data2plot = data.frame(con = con$alpha(con$is_post == 0), uncon = uncon$alpha(uncon$is_post == 0))
#####
data2plot = data.frame("con" = con$alpha(con$is_post == 0), "uncon" = uncon$alpha(uncon$is_post == 0))
#####
data2plot = data.frame("con" = con$alpha(con$is_post == 0), "uncon" = uncon$alpha(uncon$is_post == 0))
data2plot = data.frame("con" = con$alpha(con$is_post == 0), "uncon" = uncon$alpha(uncon$is_post == 0))
#####
data2plot = data.frame("con" = con$alpha[con$is_post == 0], "uncon" = uncon$alpha[uncon$is_post == 0])
View(data2plot)
ggplot(data2plot, aes(x=con, y=uncon))+geom_point()
data2plot = data.frame("con" = con$alpha[con$is_post == 1], "uncon" = uncon$alpha[uncon$is_post == 1])
ggplot(data2plot, aes(x=con, y=uncon))+geom_point()
##### Load data ####
path = "D:/Ruonan/Projects in the lab/Ellen Ambig Avers/Data"
nopar_file = file.path(path, "feedback_analysis_nonPar_03112019.csv")
par_risk_file = file.path(path, "feedback_All_Par_RiskOnly_03112019.csv")
parcon_risk_file = file.path(path, "feedback_All_ParCon_RiskOnly_03112019.csv")
nonpar = read.csv(nonpar_file, header = TRUE)
par_risk = read.csv(par_risk_file, header = TRUE)
parcon_risk = read.csv(parcon_risk_file, header = TRUE)
nonpar_file = file.path(path, "feedback_analysis_nonPar_03112019.csv")
nonpar = read.csv(nonpar_file, header = TRUE)
View(nonpar)
View(par_risk)
##### Combine data frame ####
merge(nonpar, par_risk, by = "id")
##### Combine data frame ####
all = merge(nonpar, par_risk, by = "id")
View(all)
##### Combine data frame ####
all = merge(nonpar, par_risk, by = c("id", "is_post"))
ggplot(all(all$is_post == 0 & all$is_excluded == 0), aes(x = alpha)) +
geom_histogram()
##### Combine data frame ####
all = merge(nonpar, par_risk, by = c("id", "is_post"))
ggplot(all(all$is_post == 0 & all$is_excluded == 0), aes(x = alpha)) +
geom_histogram()
ggplot(all(all$is_post == 0 & all$is_excluded == 0, :), aes(x = alpha)) +
geom_histogram()
ggplot(all[all$is_post == 0 & all$is_excluded == 0, ], aes(x = alpha)) +
geom_histogram()
all_uncon = merge(nonpar, par_risk, by = c("id", "is_post"))
ggplot(all_uncon[alluncon$is_post == 0 & all_uncon$is_excluded == 0, ], aes(x = alpha)) +
geom_histogram()
ggplot(all_uncon[all_uncon$is_post == 0 & all_uncon$is_excluded == 0, ], aes(x = alpha)) +
geom_histogram()
ggplot(all_uncon[all_uncon$is_post == 0 & all_uncon$is_excluded == 0, ], aes(x = alpha)) +
geom_histogram(binwidth = 50)
ggplot(all_uncon[all_uncon$is_post == 0 & all_uncon$is_excluded == 0, ], aes(x = alpha)) +
geom_histogram(binwidth = 0.1)
all_con = merge(nonpar, parcon_risk, by = c("id", "is_post"))
ggplot(all_con[all_con$is_post == 0 & all_con$is_excluded == 0, ], aes(x = alpha)) +
geom_histogram(binwidth = 0.1)
##### Change column names ####
colnames(parcon_risk)
colnames(parcon_risk) <- c("id", "is_post", "gamma_con", "alpha_con",
"LL_con", "LL0_con", "r2_con", "AIC_con", "BIC_con")
View(parcon_risk)
all = merge(nonpar, par_risk, parcon_risk, by = c("id", "is_post"))
##### Combine data frame ####
uncon_con = merge(par_risk, parcon_risk, by = c("id", "is_post"))
View(uncon_con)
all = merge(nonpar, uncon_con , by = c("id", "is_post"))
View(all)
data2plot = all[all$is_post == 0 & all$is_excluded == 0, ]
data2plot = all[all$is_post == 0 & all$is_excluded == 0, ]
ggplot(data2plot, aes(x = alpha)) +
geom_histogram(binwidth = 0.1)
data2plot = all[all$is_excluded == 0, ]
ggplot(data2plot, aes(x = alpha, color = is_post)) +
geom_histogram(binwidth = 0.1, alpha = 0.5, position = "identity")
data2plot = all[all$is_excluded == 0, ]
ggplot(data2plot, aes(x = alpha, color = is_post)) +
geom_histogram(binwidth = 0.1, fill = "white", alpha = 0.5, position = "identity")
as.factor(all$is_excluded)
all$is_excluded = as.factor(all$is_excluded)
all$is_post = as.factor(all$is_post)
all$cond = as.factor(all$cond)
data2plot = all[all$is_excluded == 0, ]
ggplot(data2plot, aes(x = alpha, color = is_post)) +
geom_histogram(binwidth = 0.1, fill = "white", alpha = 0.5, position = "identity")
ggplot(data2plot, aes(x = alpha, color = is_post)) +
geom_histogram(binwidth = 0.2, fill = "white", alpha = 0.5, position = "identity")
ggplot(data2plot, aes(x = alpha, color = is_post)) +
geom_histogram(binwidth = 0.2,  alpha = 0.5, position = "identity")
ggplot(data2plot, aes(x = alpha, color = is_post)) +
geom_histogram(binwidth = 0.5,  fill = "white", alpha = 0.5, position = "identity")
ggplot(data2plot, aes(x = alpha, color = is_post)) +
geom_histogram(binwidth = 0.3,  fill = "white", alpha = 0.5, position = "identity")
ggplot(data2plot, aes(x = alpha, color = is_post)) +
geom_histogram(binwidth = 0.2,  fill = "white", alpha = 0.2, position = "identity")
ggplot(data2plot, aes(x = alpha_con, color = is_post)) +
geom_histogram(binwidth = 0.2,  fill = "white", alpha = 0.2, position = "identity")
ggplot(data2plot, aes(x = alpha_con, color = is_post)) +
geom_histogram(binwidth = 0.05,  fill = "white", alpha = 0.2, position = "identity")
##### Load data ####
path = "D:/Ruonan/Projects in the lab/Ellen Ambig Avers/Data"
nonpar_file = file.path(path, "feedback_analysis_nonPar_03112019.csv")
par_file = file.path(path, "feedback_All_Par_03112019.csv")
parcon_file = file.path(path, "feedback_All_ParCon_03112019.csv")
nonpar = read.csv(nonpar_file, header = TRUE)
par = read.csv(par_file, header = TRUE)
parcon = read.csv(parcon_file, header = TRUE)
colnames(parcon)
colnames(parcon) <- c("id", "is_post", "gamma_con", "alpha_con", "beta_con",
"LL_con", "LL0_con", "r2_con", "AIC_con", "BIC_con")
View(par)
view(parcon)
View(parcon)
View(par)
uncon_con = merge(par, parcon, by = c("id", "is_post"))
View(con_uncon)
View(uncon_con)
all = merge(nonpar, uncon_con, by = c("id", "is_post"))
View(all)
all$is_excluded = as.factor(all$is_excluded)
all$is_post = as.factor(all$is_post)
all$cond = as.factor(all$cond)
data2plot = all[all$is_excluded == 0, ]
ggplot(data2plot, aes(x = alpha, color = is_post)) +
geom_histogram(binwidth = 0.2,  fill = "white", alpha = 0.2, position = "identity")
##### Packages ####
library("ggplot2")
ggplot(data2plot, aes(x = alpha, color = is_post)) +
geom_histogram(binwidth = 0.2,  fill = "white", alpha = 0.2, position = "identity")
ggplot(data2plot, aes(x = alpha, color = is_post)) +
geom_histogram(binwidth = 0.1,  fill = "white", alpha = 0.2, position = "identity")
ggplot(data2plot, aes(x = alpha_con, color = is_post)) +
geom_histogram(binwidth = 0.05,  fill = "white", alpha = 0.2, position = "identity")
ggplot(data2plot, aes(x = alpha_con, color = is_post)) +
geom_histogram(binwidth = 0.02,  fill = "white", alpha = 0.2, position = "identity")
ggplot(data2plot, aes(x = beta, color = is_post)) +
geom_histogram(binwidth = 0.1,  fill = "white", alpha = 0.2, position = "identity")
ggplot(data2plot, aes(x = beta_con, color = is_post)) +
geom_histogram(binwidth = 0.02,  fill = "white", alpha = 0.2, position = "identity")
ggplot(data2plot, aes(x = gamma, color = is_post)) +
geom_histogram(binwidth = 0.1,  fill = "white", alpha = 0.2, position = "identity")
ggplot(data2plot, aes(x = gamma_con, color = is_post)) +
geom_histogram(binwidth = 0.02,  fill = "white", alpha = 0.2, position = "identity")
ggplot(data2plot, aes(x = gamma_con, color = is_post)) +
geom_histogram(binwidth = 0.1,  fill = "white", alpha = 0.2, position = "identity")
ggplot(data2plot, aes(x = gamma_con, color = is_post)) +
geom_histogram(binwidth = 0.1,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Gamma constrained")
ggplot(data2plot, aes(x = gamma_con, color = is_post)) +
geom_histogram(binwidth = 1,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Gamma constrained")
ggplot(data2plot, aes(x = alpha, color = is_post)) +
geom_histogram(binwidth = 0.1,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Alpha")
ggplot(data2plot, aes(x = alpha_con, color = is_post)) +
geom_histogram(binwidth = 0.02,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Alpha constrained")
View(all)
data2plot = all[all$is_excluded == 0 & all$cond == 0, ]
ggplot(data2plot, aes(x = alpha, color = is_post)) +
geom_histogram(binwidth = 0.1,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Alpha")
ggplot(data2plot, aes(x = beta, color = is_post)) +
geom_histogram(binwidth = 0.1,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Beta")
ggplot(data2plot, aes(x = gamma, color = is_post)) +
geom_histogram(binwidth = 0.1,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Gamma")
ggplot(data2plot, aes(x = alpha_con, color = is_post)) +
geom_histogram(binwidth = 0.02,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Alpha constrained")
ggplot(data2plot, aes(x = beta_con, color = is_post)) +
geom_histogram(binwidth = 0.02,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Beta constrained")
ggplot(data2plot, aes(x = gamma_con, color = is_post)) +
geom_histogram(binwidth = 1,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Gamma constrained")
ggplot(data2plot, aes(x = gamma_con, color = is_post)) +
geom_histogram(binwidth = 0.1,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Gamma constrained")
data2plot = all[all$is_excluded == 0 & all$cond == 1, ]
ggplot(data2plot, aes(x = alpha, color = is_post)) +
geom_histogram(binwidth = 0.1,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Alpha")
ggplot(data2plot, aes(x = beta, color = is_post)) +
geom_histogram(binwidth = 0.1,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Beta")
ggplot(data2plot, aes(x = gamma, color = is_post)) +
geom_histogram(binwidth = 0.1,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Gamma")
ggplot(data2plot, aes(x = alpha_con, color = is_post)) +
geom_histogram(binwidth = 0.02,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Alpha constrained")
ggplot(data2plot, aes(x = beta_con, color = is_post)) +
geom_histogram(binwidth = 0.02,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Beta constrained")
ggplot(data2plot, aes(x = gamma_con, color = is_post)) +
geom_histogram(binwidth = 0.1,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Gamma constrained")
data2plot = all[all$is_excluded == 0 & all$cond == 2, ]
ggplot(data2plot, aes(x = alpha, color = is_post)) +
geom_histogram(binwidth = 0.1,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Alpha")
ggplot(data2plot, aes(x = beta, color = is_post)) +
geom_histogram(binwidth = 0.1,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Beta")
ggplot(data2plot, aes(x = gamma, color = is_post)) +
geom_histogram(binwidth = 0.1,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Gamma")
ggplot(data2plot, aes(x = alpha_con, color = is_post)) +
geom_histogram(binwidth = 0.02,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Alpha constrained")
ggplot(data2plot, aes(x = beta_con, color = is_post)) +
geom_histogram(binwidth = 0.02,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Beta constrained")
ggplot(data2plot, aes(x = gamma_con, color = is_post)) +
geom_histogram(binwidth = 0.1,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Gamma constrained")
nonpar = read.csv(nonpar_file, header = TRUE)
par_risk = read.csv(par_risk_file, header = TRUE)
parcon_risk = read.csv(parcon_risk_file, header = TRUE)
par = read.csv(par_file, header = TRUE)
parcon = read.csv(parcon_file, header = TRUE)
par$is_constrained = 0
View(par)
parcon$is_constrained = 1
View(parcon)
uncon_con = merge(par, parcon, by = c("id", "is_post", "is_constrained"))
View(uncon_con)
uncon_con = merge(par, parcon, by = c("id", "is_post"))
View(uncon_con)
uncon_con = merge(par, parcon, by = c(intersect(names(par), names(parcon)) ))
View(uncon_con)
uncon_con = merge(par, parcon)
View(uncon_con)
uncon_con = rbind(par, parcon)
View(uncon_con)
names(nonpar)
names(uncon_con)
all = merge(nonpar, uncon_con, by = intersect(names(nonpar), names(uncon_con)))
View(all)
all$is_excluded = as.factor(all$is_excluded)
all$is_post = as.factor(all$is_post)
all$cond = as.factor(all$cond)
all$is_constrained = as.factor(all$is_constrained)
View(all)
all(all$id == 1176,)
all(all$id == 1176, )
all(all$id == 1176, :)
all(all$id == 1176)
all[all$id = 1176, ]
all[all$id == 1176, ]
test = all[all$id == 1176, ]
View(test)
##### Histogram ####
data2plot = all[all$is_post == 0 & all$is_excluded == 0, ]
ggplot(data2plot, aes(x = alpha, color = is_constrained)) +
geom_histogram(binwidth = 0.1,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Alpha")
ggplot(data2plot, aes(x = alpha, color = is_constrained)) +
geom_histogram(binwidth = 0.05,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Alpha")
ggplot(data2plot, aes(x = beta, color = is_constrained)) +
geom_histogram(binwidth = 0.05,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Beta")
ggplot(data2plot, aes(x = beta, color = is_constrained)) +
geom_histogram(binwidth = 0.1,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Beta")
ggplot(data2plot, aes(x = gamma, color = is_constrained)) +
geom_histogram(binwidth = 0.1,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Gamma")
data2plot = all[all$is_post == 1 & all$is_excluded == 0, ]
ggplot(data2plot, aes(x = alpha, color = is_constrained)) +
geom_histogram(binwidth = 0.05,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Alpha")
ggplot(data2plot, aes(x = beta, color = is_constrained)) +
geom_histogram(binwidth = 0.1,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Beta")
ggplot(data2plot, aes(x = gamma, color = is_constrained)) +
geom_histogram(binwidth = 0.1,  fill = "white", alpha = 0.2, position = "identity") +
ggtitle("Gamma")
##### Model fitting quality ####
data2plot = all[all$is_excluded == 0, ]
ggplot(data2plot, aes(x = r2, y = r5)) +
geom_point(aes(color = is_post)) +
ggtitle("R squared and error")
ggplot(data2plot, aes(x = r2, y = inconsist)) +
geom_point(aes(color = is_post)) +
ggtitle("R squared and error")
ggplot(data2plot, aes(x = AIC, y = inconsist)) +
geom_point(aes(color = cond, shape = is_post)) +
ggtitle("Inconsistency and error")
ggplot(data2plot, aes(x = AIC, y = inconsist)) +
geom_point(aes(color = cond, shape = is_post)) +
ggtitle("AIC and inconsistency")
ggplot(data2plot, aes(x = AIC, y = r2)) +
geom_point(aes(color = cond, shape = is_post)) +
ggtitle("AIC and inconsistency")
ggplot(data2plot, aes(x = AIC, y = BIC)) +
geom_point(aes(color = cond, shape = is_post)) +
ggtitle("AIC and inconsistency")
ggplot(data2plot, aes(x = AIC, y = LL) +
geom_point(aes(color = cond, shape = is_post)) +
ggtitle("AIC and inconsistency")
C
ggplot(data2plot, aes(x = AIC, y = LL)) +
geom_point(aes(color = cond, shape = is_post)) +
ggtitle("AIC and inconsistency")
ggplot(data2plot, aes(x = r2, y = r5)) +
geom_point(aes(color = is_post)) +
ggtitle("R squared and error")
ggplot(data2plot, aes(x = r2, y = inconsist)) +
geom_point(aes(color = cond, shape = is_post)) +
ggtitle("R square and inconsistency")
##### Model fitting quality ####
data2plot = all[all$is_excluded == 0 & all$is_constrained == 0, ]
ggplot(data2plot, aes(x = r2, y = inconsist)) +
geom_point(aes(color = cond, shape = is_post)) +
ggtitle("R square and inconsistency")
##### Model fitting quality ####
data2plot = all[all$is_excluded == 0 & all$is_constrained == 1, ]
ggplot(data2plot, aes(x = r2, y = inconsist)) +
geom_point(aes(color = cond, shape = is_post)) +
ggtitle("R square and inconsistency")
# subjects whose unconstrained fits were bad
data_uncon = all[all$is_excluded == 0 & all$is_constrained == 0 & all$is_post == 0,]
data_uncon[data_uncon$alpha < 0.1070 | data_uncon$alpha > 2.0987]$id
data_uncon[data_uncon$alpha < 0.1070 | data_uncon$alpha > 2.0987,]$id
data_uncon[data_uncon$beta < 0.0897 | data_uncon$beta > 4.1475,]$id
# alpha out of range
id_out_alpha = data_uncon[data_uncon$alpha < 0.1070 | data_uncon$alpha > 2.0987,]$id
id_out_beta = data_uncon[data_uncon$beta < 0.0897 | data_uncon$beta > 4.1475,]$id
id_out_alpha
id_out_beta
View(uncon_con)
View(all)
setwd(path)
# save data frame
save(all, file = "feedback_all_03132019.rda")
load("feedback_all_03132019.rda")
View(all)
##### Load data ####
# eaatb = read.csv("D:/Ruonan/Projects in the lab/Ellen Ambig Avers/Data/feedback_analysis_all_09052018.csv", header = TRUE)
# eaatb = read.csv("feedback_analysis_all_09052018.csv", header = TRUE)
load("feedback_all_03132019.rda")
eaatb = all
# subjects whose unconstrained fits were bad
data_uncon = all[all$is_excluded == 0 & all$is_constrained == 0 & all$is_post == 0,]
# alpha out of range
id_out_alpha = data_uncon[data_uncon$alpha < 0.1070 | data_uncon$alpha > 2.0987,]$id
id_out_beta = data_uncon[data_uncon$beta < 0.0897 | data_uncon$beta > 4.1475,]$id
id_out_alpha
id_out_beta
